What is Django?
- A web application framework built with Python that allows us to easily create dynamic web apps using Python.
- It helps with all the server side things (requests, authentication, etc.)

Django documentation is also really good and details, with examples and tutorials for many of the answers

1. Make sure django is installed on your computer ("pip install django")
2. Navigate to the file on your computer that you want to make the project in ("cd [path]")
3. Start the Django project ("django-admin startproject [projectname]")
    - When you open up the created folder, there will be another folder with your project name. This is the core app of the project
4. Then navigate into the project folder ("cd [projectname]")
5. Run the project ("python manage.py runserver")

How do urls.py and views.py work?
1. The browser makes a request to a url (ex: /about)
2. The urls.py file receives and reads the requested url
3. After reading this url, it decides which function to fire in views.py
4. Once the view is determined, the views.py file sends the response to the browser


To bring in HTML templates, create a templates folder that is at the same level as the application.
Create separate html files in the templates folder for each page.
In the views.py page in your app, import the render module. Return a render -- it always takes the request as the first arguement
The second arguement will be the name of the html templates
ALSO, you need to go to the settings.py file, scroll down to the templates section, and add the directory when the templates are found (in the templates folder)

Creating separate apps for different parts of the project:
The "root app" is the app with the same name as the project and is automatically created by django
Splitting the project into separate apps to make clear the different parts of your project is a better organization method
in terminal: "python manage.py startapp articles" --- articles is the name of the app we're adding

When we create a new app, it should have its own urls.py file (that we add) and its own templates folder (we also add)
    Within the templates folder, create another folder with the name of the app (articles in this case)
    This makes it so each app is self contained to make it easier to read

Whenever we create a new app, we need to register the app in the project.
    1. Go to settings.py in the main app
    2. Add the name under the INSTALLED_APPS section
    3. Include app urls in the main application urls.py file